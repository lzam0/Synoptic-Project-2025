doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Data Visualization for #{riverName ? riverName : 'River Data'}
    // Link to Bootstrap CSS for styling and responsiveness
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css")
    // Link to your custom CSS file for site-wide styling (ensure this path is correct if you have one)
    link(rel="stylesheet", href="/css/style.css")
    // Link to Chart.js library for creating interactive charts
    script(src="https://cdn.jsdelivr.net/npm/chart.js")
    // Inline style for Google Translate dropdown positioning
    style.
      #google_translate_element {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 9999;
      }
  body
    // Google Translate dropdown div
    div#google_translate_element
    // Google Translate external script
    script(src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit")
    // Google Translate initialization function
    script.
      function googleTranslateElementInit() {
        new google.translate.TranslateElement({
          pageLanguage: 'en',
          includedLanguages: 'en,fr,de,es,zh-CN,ar,ru,af,zu', // Languages to include in the dropdown
          layout: google.translate.TranslateElement.InlineLayout.HORIZONTAL
        }, 'google_translate_element');
      }

    // Include the shared navigation bar component
    include _navbar.pug

    .container.mt-5
      h1.text-center.mb-4 Data Visualization

      // Conditional content based on whether a river has been selected
      if data
        // Display river-specific title if data is present
        h2.text-center.mb-4 #{riverName} Data Overview

        // Row for the charts, optimized for responsiveness
        .row.justify-content-center
          .col-lg-10.col-md-12.mb-4
            .card.shadow-sm.border-primary
              .card-header.bg-primary.text-white.py-3
                h3.mb-0.text-center Average Level and Flow per Year
              .card-body.p-4
                // Canvas element for the line chart (Average Level and Flow)
                canvas#myChart(width='800' height='400')

          .col-lg-10.col-md-12.mb-4
            .card.shadow-sm.border-success
              .card-header.bg-success.text-white.py-3
                h3.mb-0.text-center Average Flow per Year (Bar Chart)
              .card-body.p-4
                // Canvas element for the bar chart (Average Flow)
                canvas#barChart(width='800' height='400')

          .col-lg-10.col-md-12.mb-4
            // Container for the data table, which will be rendered dynamically by charts.js
            div#dataTableContainer

        // Pass the raw data from the server (fetched from DB) to the client-side JavaScript.
        // This script block is only rendered if 'data' is available.
        script.
          window.rawData = !{JSON.stringify(data)};
        // Link to your custom JavaScript file containing Chart.js logic.
        script(src='/js/charts.js')

      else
        // Display selection options if no river data is currently loaded
        .text-center.mt-5
          h2 Please select a river to view its data visualizations.
          .d-grid.gap-2.col-md-6.mx-auto.mt-4
            // Buttons to select a river
            a.btn.btn-outline-primary.btn-lg(href='/data-visualisation/A5H006YRPK') View Limpopo River Data
            a.btn.btn-outline-success.btn-lg(href='/data-visualisation/D1H003YRPK') View Orange River Data

    // Link to Bootstrap Bundle JS for dropdowns and other interactive components
    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js')

    // Retrigger the Google Translate after the page loads
    script.
      window.addEventListener('load', function() {
        if (typeof googleTranslateElementInit === 'function') {
          googleTranslateElementInit();
        }
      });
